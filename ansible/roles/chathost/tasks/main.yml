---

- name: Install make to build node
  yum: 
    name: gcc-c++, make
    state: latest

- name: Update repo for Node
  get_url: 
    url: https://rpm.nodesource.com/setup_14.x
    dest: /tmp/setup_14.x
    mode: "0775"

- name: Install setup script
  shell: /tmp/setup_14.x

- name: Install the latest version of Node
  yum:
    name: nodejs
    state: latest
  
- name: Install the latest version of Git
  yum:
    name: git
    state: latest

- name: Install Chathost repo
  git:
    repo: 'https://github.com/RT-coding-team/chathost.git'
    dest: "{{ document_root }}/chathost"  # With git declar the final directory
    clone: yes
    force: yes
    update: yes

- name: Set Permissions of ~/chathost
  ansible.builtin.file:
    path: "{{ document_root }}/chathost"
    recurse: yes
    owner: ec2-user
    group: ec2-user
    mode: '776'

- name: Set data directory for Mongo
  ansible.builtin.file:
    path: "{{ document_root }}/chathost/data/db"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '777'

- name: Set data directory for MariaDB
  ansible.builtin.file:
    path: "{{ document_root }}/chathost/data/mariadb"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '777'

- name: Add the user 'nginx' 
  ansible.builtin.user:
    name: nginx
    uid: 101
    group: ec2-user

- name: Set data directory for Moodledata
  ansible.builtin.file:
    path: "{{ document_root }}/chathost/data/moodledata"
    state: directory
    owner: nginx
    group: ec2-user
    mode: '777'

- name: Download and unzip Moodle base code 3.10 latest
  ansible.builtin.unarchive:
    src: https://download.moodle.org/download.php/direct/stable310/moodle-latest-310.zip
    dest: "{{ document_root }}/"  # With unzip, it has the ./moodle in the archive
    remote_src: yes

- name: Copy config.php to working directory
  template:
    src: moodle_config_php.j2
    dest: "{{ document_root }}/moodle/config.php"

- name: Copy nginx.conf to working directory
  template:
    src: nginx_conf.j2
    dest: "{{ document_root }}/chathost/resources/nginx/nginx.conf"

- name: Copy conf.d to working directory
  template:
    src: conf_d_default_conf.j2
    dest: "{{ document_root }}/chathost/resources/moodlenginx/conf.d/default.conf"

- name: Install node packages based on package.json.
  community.general.npm:
    path: "{{ document_root }}/chathost"
    
- name: Launch Dockers (docker-compose up -d)
  command: 'sudo -u ec2-user {{ document_root }}/chathost/run_docker_compose.sh &'


